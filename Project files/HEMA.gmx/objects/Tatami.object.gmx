<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tatami</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-31</depth>
  <persistent>0</persistent>
  <parentName>Solid</parentName>
  <maskName>spr_tatami_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initiliaze the object

image_speed = 0;
image_index = 0;
hit = false;
position = "center";
type_of_cut = "ober";

// Create tutorial buttons
ttrl_bttn_two = instance_create(154,304,Tutorial_button);
ttrl_bttn_three = instance_create(176,304,Tutorial_button);

with(ttrl_bttn_two)
{
    image_alpha = 0.75;
    image_speed = 0;
    image_angle = -90;
    image_index = 3;
    alarm[0] = 10;
}
with(ttrl_bttn_three)
{   
    image_alpha = 0.75;
    image_speed = 0;
    alarm[0] = 10;
    
    if (gamepad_is_connected(0)) 
    {
        image_index = 1;
        
    }
    else
    {
        image_index = 2;
    }
}

state = tatami_fesh_state;

// Create the audio emitter
audio_em = audio_emitter_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset the object
hit = false;
sprite_index = spr_tatami;
state = tatami_fesh_state;
alarm[0] = 0;
image_alpha = 1; 
image_index = 0;

// Move object
var ran_num_one = irandom_range(2,5);
var ran_num_two = irandom_range(1,3);

switch (ran_num_one)
{
    case 2:
        // right
        if (position != "right")
        {
            position = "right";
        }
        else
        {
            position = "left"
        }
            break;
    case 3:
        // left
        if (position != "left")
        {
            position = "left";
        }
        else
        {
            position = "down"
        }
            break;
    case 4:
        // down
        if (position != "down")
        {
            position = "down";
        }
        else
        {
            position = "up"
        }
            break;
    case 5:
        // center
        if (position != "up")
        {
            position = "up";
        }
        else
        {
            position = "right"
        }
            break;
}

switch (ran_num_two)
{
    case 1:
        // Ober
        type_of_cut = "ober";
            break;
    case 2:
        // Mittel one
        type_of_cut = "mittel_one";
            break;
    case 3:
        // Mittel two
        type_of_cut = "mittel_two";
            break;
}

switch (position)
{
    case "right":
        x = 256;
        y = 320;
        
        with(ttrl_bttn_two)
        {
            x = other.x-40;
            y = other.y-12;
            image_angle = -90;
            
            if(other.type_of_cut == "ober")
            {
               image_index = 3;
            }
            if(other.type_of_cut == "mittel_one")
            {
                image_index = 4;
                image_xscale = -1;
            }
            if(other.type_of_cut == "mittel_two")
            {
                image_index = 4;
                image_xscale = 1;
            }
        }
        with(ttrl_bttn_three)
        {
            x = other.x-16;
            y = other.y-12;
        }
            break;
    case "left":
        x = 128;
        y = 320;
        
        with(ttrl_bttn_two)
        {
            x = other.x+40;
            y = other.y-12;
            image_angle = 90;
            
            if(other.type_of_cut == "ober")
            {
                 image_index = 3;
            }
            if(other.type_of_cut == "mittel_one")
            {
                image_index = 4;
                image_xscale = -1;
            }
            if(other.type_of_cut == "mittel_two")
            {
                image_index = 4;
                image_xscale = 1;
            }
        }
        with(ttrl_bttn_three)
        {
            x = other.x+16;
            y = other.y-12;
        }
            break;
    case "down":
        x = 192;
        y = 384;
        
        with(ttrl_bttn_two)
        {
            x = other.x;
            y = other.y-40-16;
            image_angle = 180;
            
            if(other.type_of_cut == "ober")
            {
                image_index = 3;
            }
            if(other.type_of_cut == "mittel_one")
            {
                image_index = 4;
                image_xscale = -1;
            }
            if(other.type_of_cut == "mittel_two")
            {
                image_index = 4;
                image_xscale = 1;
            }
        }
        with(ttrl_bttn_three)
        {
            x = other.x;
            y = other.y-16-16;
        }
            break;
    case "up":
        x = 192;
        y = 256;
        
        with(ttrl_bttn_two)
        {
            x = other.x;
            y = other.y+40;
            image_angle = 0;
            
            if(other.type_of_cut == "ober")
            {
                 image_index = 3;
            }
            if(other.type_of_cut == "mittel_one")
            {
                image_index = 4;
                image_xscale = -1;
            }
            if(other.type_of_cut == "mittel_two")
            {
                image_index = 4;
                image_xscale = 1;
            }
        }
        with(ttrl_bttn_three)
        {
            x = other.x;
            y = other.y+16;
        }
            break;
}

with(ttrl_bttn_two)
{
    alarm[0] = 10;
    image_alpha = 0.75; 
}
with(ttrl_bttn_three)
{
    alarm[0] = 10;
    image_alpha = 0.75; 
    
    if (gamepad_is_connected(0)) 
        {
            image_index = 1;
        }
        else
        {
            image_index = 2;
        }   
}

// destroy objects at the end of the game

if (Score_tatami.stop_time)
{
    alarm[0] = -1;
    image_alpha = 0; 
    
    with(ttrl_bttn_two)
    {
        alarm[0] = -1;  
        image_alpha = 0;    
    }
    with(ttrl_bttn_three)
    {
        alarm[0] = -1;  
        image_alpha = 0;
    }
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// flash 

alarm[0] = 3;

if (image_alpha == 1)
{
    image_alpha = 0;
}
else
{
    image_alpha = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// change layer and execute state

var dist_y = y - Player.y;

if (dist_y &gt; 0)
{
    depth = -32;    
}
if (dist_y &lt; 0)
{
    depth = -29;
}

// Execute the script
script_execute(state);



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
