<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the timer and score

display_set_gui_size(view_wview[0], view_hview[0]);

tutorial_part = 1;
coins = 0;
stop_time = false;
tatami_count = 0;
time = 60*30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change room to highscore

// Open the highscores
ini_open("Settings.ini");
global.tatami_score = ini_read_real("Score", "Tatami Score", 0);

// A new highscore case
if (coins &gt; global.tatami_score)
{
    global.tatami_score = coins;
    ini_write_real("Score", "Tatami Score", coins);
}

score = coins;

// Close the ini file
ini_close();

tutorial_part = 2;
Player.disable_input = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop the game

if (tatami_count == 15 || time &lt;= 0)
{
    if (!stop_time)
    {
        stop_time = true;
        alarm[0] = 5;
    }
}
if (tutorial_part == 2)
{
    var gp_id = 0;
    var keypress_one = false; 
    var keypress_two = false; 
    
    if(gamepad_is_connected(gp_id))
    {
        if (gamepad_button_check_pressed(gp_id, gp_face1))
        {
            var keypress_one = 1;
        }
        if (gamepad_button_check_pressed(gp_id, gp_face2))
        {
            var keypress_two = 1;
        }
    }
    else
    {
        if (keyboard_check_pressed(vk_space))
        {
            var keypress_one = 1;
        }
        if (keyboard_check_pressed(ord('C')))
        {
            var keypress_two = 1;
        }
    }
    if (keypress_one)
    {
        room_goto(rm_defense_drill);
    }  
    if (keypress_two)
    {
        room_goto(rm_menu_selection);
    }  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the timer and score


// Draw the coins
draw_set_halign(fa_right);
draw_set_font(fnt_game);
var str = ": "+string(coins);
draw_text_colour(64, 8, str, c_white, c_white, c_white, c_white, 1);

var text_width = string_width(str);
draw_sprite(spr_gui_coin, 0, 52-text_width, 16);

// adding to the time
if (!stop_time &amp;&amp; time &gt; 0)
{
    time -= 1;
}  

// Draw the timer
draw_text_colour(view_wview[0]/2+32, 8, "Time: "+string(floor(time /room_speed)), c_white, c_white, c_white, c_white, 1);

if (tutorial_part == 2)
{
    var gp_id = 0;
    
    draw_set_halign(fa_left);
    draw_set_font(fnt_game_small);
    
    draw_sprite(spr_text_box_medium, 0, view_wview[0]/2, 48,);
    
    if(gamepad_is_connected(gp_id))
    { 
        draw_text_colour(86, 48, "Your Score Was: " + string(coins) + "#To continue to the next tutorial #press [A].#To return to the menu press [B].", c_white, c_white, c_white, c_white, 1);
    }
    else
    { 
        draw_text_colour(86, 48, "Your Score Was: " + string(coins) + "#To continue to the next tutorial #press [Space Bar].#To return to the menu press [C].", c_white, c_white, c_white, c_white, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
